name: Deploy stats-service to AKS

on:
  push:
    branches:
      - main
      - develop

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.12

      - name: Install dependencies
        run: |
          python -m venv .venv
          source .venv/bin/activate
          pip install -r requirements.txt

      - name: Run tests
        run: |
          source .venv/bin/activate
          pytest

  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        run: |
          TAG=$(git rev-parse --short HEAD)
          docker build -t kofolmarko/stats-service:$TAG -t kofolmarko/stats-service:latest .
          docker push kofolmarko/stats-service:$TAG
          docker push kofolmarko/stats-service:latest

      - name: Set up Kubeconfig
        run: |
          mkdir ${HOME}/.kube
          echo ${{ secrets.KUBE_CONFIG }} | base64 --decode > ${HOME}/.kube/config

      - name: Install Helm
        run: curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash

      - name: Deploy Helm Chart
        run: |
          TAG=$(git rev-parse --short HEAD)
          if [[ $GITHUB_REF == "refs/heads/main" ]]; then
            VALUES_FILE="./charts/values.prod.yaml"
          elif [[ $GITHUB_REF == "refs/heads/develop" ]]; then
            VALUES_FILE="./charts/values.dev.yaml"
          else
            echo "Unsupported branch. Exiting."
            exit 1
          fi

          helm upgrade --install stats-service ./charts \
            --values $VALUES_FILE \
            --set image.tag=$TAG
